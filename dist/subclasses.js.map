{"version":3,"sources":["../src/subclasses.ts"],"names":[],"mappings":"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","file":"subclasses.js","sourcesContent":["\r\nexport class openvz {\r\n    get; post; del; put;\r\n    constructor(get, post, del, put) {\r\n        this.get = get;\r\n        this.post = post;\r\n        this.del = del;\r\n        this.put = put;\r\n    }\r\n\r\n    createOpenvzContainer(node, data, callback) {\r\n        const url = '/nodes/' + node + '/openvz'\r\n        this.post(url, data, callback);\r\n    }\r\n    mountOpenvzPrivate(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/status/mount';\r\n        this.post(url, data, callback);\r\n    }\r\n    shutdownOpenvzContainer(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/status/shutdown';\r\n        this.post(url, data, callback);\r\n    }\r\n    startOpenvzContainer(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/status/start';\r\n        this.post(url, data, callback);\r\n    }\r\n    stopOpenvzContainer(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/status/stop';\r\n        this.post(url, data, callback);\r\n    }\r\n    unmountOpenvzContainer(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/status/unmount';\r\n        this.post(url, data, callback);\r\n    }\r\n    migrateOpenvzContainer(node, vmid, target, callback) {\r\n        const data = { 'target': target };\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/migrate';\r\n        this.post(url, data, callback);\r\n    }\r\n    getContainerIndex(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid;\r\n        this.get(url, data, callback);\r\n    }\r\n    getContainerStatus(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + node + '/status/current';\r\n        this.get(url, data, callback);\r\n    }\r\n    getContainerBeans(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/status/ubc';\r\n        this.get(url, data, callback);\r\n    }\r\n    getContainerConfig(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/config';\r\n        this.get(url, data, callback);\r\n    }\r\n    getContainerInitLog(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/initlog';\r\n        this.get(url, data, callback);\r\n    }\r\n    getContainerRRD(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/rrd';\r\n        this.get(url, data, callback);\r\n    }\r\n    getContainerRRDData(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/rrddata';\r\n        this.get(url, data, callback);\r\n    }\r\n    deleteOpenvzContainer(node, vmid, callback) {\r\n        const data = {};\r\n        const url = '/nodes/' + node + '/openvz/' + vmid;\r\n        this.del(url, data, callback);\r\n    }\r\n    setOpenvzContainerOptions(node, vmid, data, callback) {\r\n        const url = '/nodes/' + node + '/openvz/' + vmid + '/config';\r\n        this.put(url, data, callback);\r\n    }\r\n}\r\n\r\n//  //vm functions\r\n//  class qemu {\r\n//    getStatus(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/';\r\n//      get(url, data, callback);\r\n//    }\r\n//    get(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu;\r\n//      get(url, data, callback);\r\n//    }\r\n//    del(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu;\r\n//      del(url, data, callback);\r\n//    }\r\n//    getStatusCurrent(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/current'\r\n//      get(url, data, callback);\r\n//    }\r\n//    start(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/start';\r\n//      post(url, data, callback);\r\n//    }\r\n//    stop(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/stop';\r\n//      post(url, data, callback);\r\n//    }\r\n//    reset(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/reset';\r\n//      post(url, data, callback);\r\n//    }\r\n//    shutdown(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/shutdown';\r\n//      post(url, data, callback);\r\n//    }\r\n//    suspend(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/suspend';\r\n//      post(url, data, callback);\r\n//    }\r\n//    resume(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/status/resume';\r\n//      post(url, data, callback);\r\n//    }\r\n//    //snapshot functions\r\n\r\n//    rrd(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/rrd';\r\n//      get(url, data, callback);\r\n//    }\r\n//    rrdData(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/rrddata';\r\n//      get(url, data, callback);\r\n//    }\r\n//    getConfig(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/config';\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateConfig(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/config';\r\n//      put(url, data, callback);\r\n//    }\r\n//    setConfig(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/config';\r\n//      post(url, data, callback);\r\n//    }\r\n//    pending(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/pending';\r\n//      get(url, data, callback);\r\n//    }\r\n//    unlink(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/unlink';\r\n//      put(url, data, callback);\r\n//    }\r\n//    vncproxy(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/vncproxy';\r\n//      post(url, data, callback);\r\n//    }\r\n//    vncwebsocket(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/vncwebsocket';\r\n//      get(url, data, callback);\r\n//    }\r\n//    spiceproxy(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/spiceproxy';\r\n//      post(url, data, callback);\r\n//    }\r\n//    sendkey(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/sendkey';\r\n//      put(url, data, callback);\r\n//    }\r\n//    feature(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/feature';\r\n//      get(url, data, callback);\r\n//    }\r\n//    clone(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/clone';\r\n//      post(url, data, callback);\r\n//    }\r\n//    moveDisk(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/move_disk';\r\n//      post(url, data, callback);\r\n//    }\r\n//    migrate(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/migrate';\r\n//      post(url, data, callback);\r\n//    }\r\n//    monitor(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/monitor';\r\n//      post(url, data, callback);\r\n//    }\r\n//    resize(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/resize';\r\n//      put(url, data, callback);\r\n//    }\r\n//    template(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/template';\r\n//      post(url, data, callback);\r\n//    }\r\n\r\n\r\n//  }\r\n\r\n//  class snapshot {\r\n//   list(node, qemu, callback) {\r\n//     const data = {};\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot';\r\n//     get(url, data, callback);\r\n//   }\r\n//   get(node, qemu, snapname, callback) {\r\n//     const data = {};\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot/' + snapname;\r\n//     get(url, data, callback);\r\n//   }\r\n//   getConfig(node, qemu, snapname, callback) {\r\n//     const data = {};\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot/' + snapname + '/config';\r\n//     get(url, data, callback);\r\n//   }\r\n//   putConfig(node, qemu, snapname, data, callback) {\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot/' + snapname + '/config';\r\n//     put(url, data, callback);\r\n//   }\r\n//   rollback(node, qemu, snapname, callback) {\r\n//     const data = {};\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot/' + snapname + '/rollback';\r\n//     post(url, data, callback);\r\n//   }\r\n//   delete(node, qemu, snapname, callback) {\r\n//     const data = {};\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot/' + snapname;\r\n//     del(url, data, callback);\r\n//   }\r\n//   make(node, qemu, data, callback) {\r\n//     const url = '/nodes/' + node + '/qemu/' + qemu + '/snapshot';\r\n//     post(url, data, callback);\r\n//   }\r\n// }\r\n\r\n//  //firewall functions\r\n//  class firewall {\r\n//    list(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall';\r\n//      get(url, data, callback);\r\n//    }\r\n//    listRules(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/rules';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createRule(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/rules';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getRule(node, qemu, pos, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/rules/' + pos;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateRule(node, qemu, pos, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/rules/' + pos;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteRule(node, qemu, pos, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/rules/' + pos;\r\n//      del(url, data, callback);\r\n//    }\r\n//    listAlias(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/aliases';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createAlias(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/aliases';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getAlias(node, qemu, name, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/aliases/' + name;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateAlias(node, qemu, name, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/aliases/' + name;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteAlias(node, qemu, name, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/aliases/' + name;\r\n//      del(url, data, callback);\r\n//    }\r\n//    listIpset(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createIpset(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getIpsetContent(node, qemu, name, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset/' + name;\r\n//      get(url, data, callback);\r\n//    }\r\n//    addIpToIpset(node, qemu, name, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset/' + name;\r\n//      post(url, data, callback);\r\n//    }\r\n//    deleteIpset(node, qemu, name, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset/' + name;\r\n//      del(url, data, callback);\r\n//    }\r\n//    getIpfromIpset(node, qemu, name, cidr, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset/' + name + '/' + cidr;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateIpfromIpset(node, qemu, name, cidr, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset/' + name + '/' + cidr;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteIpfromIpset(node, qemu, name, cidr, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/ipset/' + name + '/' + cidr;\r\n//      del(url, data, callback);\r\n//    }\r\n//    getOptions(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/options';\r\n//      get(url, data, callback);\r\n//    }\r\n//    setOptions(node, qemu, data, callback) {\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/options';\r\n//      put(url, data, callback);\r\n//    }\r\n//    getLog(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/log';\r\n//      get(url, data, callback);\r\n//    }\r\n//    getRefs(node, qemu, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/qemu/' + qemu + '/firewall/refs';\r\n//      get(url, data, callback);\r\n//    }\r\n//  }\r\n\r\n//  class network {\r\n//    list(node, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/network';\r\n//      get(url, data, callback);\r\n//    }\r\n//    create(node, data, callback) {\r\n//      const url = '/nodes/' + node + '/network';\r\n//      post(url, data, callback);\r\n//    }\r\n//    get(node, iface, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/network/' + iface;\r\n//      get(url, data, callback);\r\n//    }\r\n//    update(node, iface, data, callback) {\r\n//      const url = '/nodes/' + node + '/network/' + iface;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteIface(node, iface, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/network/' + iface;\r\n//      del(url, data, callback);\r\n//    }\r\n//    delete(node, callback) {\r\n//      const data = {};\r\n//      const url = '/nodes/' + node + '/network';\r\n//      del(url, data, callback);\r\n//    }\r\n//  }\r\n//  //access functions\r\n//  class access {\r\n//    listUsers(callback) {\r\n//      const data = {};\r\n//      const url = '/access/users';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createUser(data, callback) {\r\n//      const url = '/access/users';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getUser(user, callback) {\r\n//      const data = {};\r\n//      const url = '/access/users/' + user;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateUser(user, data, callback) {\r\n//      const url = '/access/users/' + user;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteUser(user, callback) {\r\n//      const data = {};\r\n//      const url = '/access/users/' + user;\r\n//      del(url, data, callback);\r\n//    }\r\n//    listGroups(callback) {\r\n//      const data = {};\r\n//      const url = '/access/groups';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createGroup(data, callback) {\r\n//      const url = '/access/groups';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getGroup(group, callback) {\r\n//      const data = {};\r\n//      const url = '/access/groups/' + group;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateGroup(group, data, callback) {\r\n//      const url = '/access/groups/' + group;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteGroup(group, data, callback) {\r\n//      const url = '/access/groups/' + group;\r\n//      del(url, data, callback);\r\n//    }\r\n//    listRoles(callback) {\r\n//      const data = {};\r\n//      const url = '/access/roles';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createRole(data, callback) {\r\n//      const url = '/access/roles';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getRole(role, callback) {\r\n//      const data = {};\r\n//      const url = '/access/roles/' + role;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateRole(role, data, callback) {\r\n//      const url = '/access/roles/' + role;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteRole(role, callback) {\r\n//      const data = {};\r\n//      const url = '/access/roles/' + role;\r\n//      del(url, data, callback);\r\n//    }\r\n//    listDomains(callback) {\r\n//      const data = {};\r\n//      const url = '/access/domains';\r\n//      get(url, data, callback);\r\n//    }\r\n//    createDomain(data, callback) {\r\n//      const url = '/access/domains';\r\n//      post(url, data, callback);\r\n//    }\r\n//    getDomain(domain, callback) {\r\n//      const data = {};\r\n//      const url = '/access/domains/' + domain;\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateDomain(domain, data, callback) {\r\n//      const url = '/access/domains/' + domain;\r\n//      put(url, data, callback);\r\n//    }\r\n//    deleteDomain(domain, callback) {\r\n//      const data = {};\r\n//      const url = '/access/domains/' + domain;\r\n//      del(url, data, callback);\r\n//    }\r\n//    getAcl(callback) {\r\n//      const data = {};\r\n//      const url = '/access/acl';\r\n//      get(url, data, callback);\r\n//    }\r\n//    updateAcl(data, callback) {\r\n//      const url = '/access/acl';\r\n//      put(url, data, callback);\r\n//    }\r\n//    getTicket(callback) {\r\n//      const data = {};\r\n//      const url = '/access/ticket';\r\n//      get(url, data, callback);\r\n//    }\r\n//    postTicket(data, callback) {\r\n//      const url = '/access/ticket';\r\n//      post(url, data, callback);\r\n//    }\r\n//    password(data, callback) {\r\n//      const url = '/access/password';\r\n//      put(url, data, callback);\r\n//    }\r\n//  }\r\n//  //pool functions\r\n//  class pools {\r\n//    list(callback) {\r\n//      const data = {};\r\n//      const url = '/pools';\r\n//      get(url, data, callback);\r\n//    }\r\n//    create(data, callback) {\r\n//      const url = '/pools';\r\n//      post(url, data, callback);\r\n//    }\r\n//    get(pool, callback) {\r\n//      const data = {};\r\n//      const url = '/pools/' + pool;\r\n//      get(url, data, callback);\r\n//    }\r\n//    update(pool, data, callback) {\r\n//      const url = '/pools/' + pool;\r\n//      put(url, data, callback);\r\n//    }\r\n//    delete(pool, callback) {\r\n//      const data = {};\r\n//      const url = '/pools/' + pool;\r\n//      del(url, data, callback);\r\n//    }\r\n//  }\r\n//  //storage functions\r\n//  class storage {\r\n//    list(callback) {\r\n//      const data = {};\r\n//      const url = '/storage';\r\n//      get(url, data, callback);\r\n//    }\r\n//    create(data, callback) {\r\n//      const url = '/storage';\r\n//      post(url, data, callback);\r\n//    }\r\n//    get(storage, callback) {\r\n//      const data = {};\r\n//      const url = '/storage/' + storage;\r\n//      get(url, data, callback);\r\n//    }\r\n//    update(storage, data, callback) {\r\n//      const url = '/storage/' + storage;\r\n//      put(url, data, callback);\r\n//    }\r\n//    delete(storage, callback) {\r\n//      const data = {};\r\n//      const url = '/storage/' + storage;\r\n//      del(url, data, callback);\r\n//    }\r\n\r\n//  }"]}