{"version":3,"sources":["../src/proxmox.ts"],"names":[],"mappings":"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","file":"proxmox.js","sourcesContent":["var querystring = require(\"querystring\");\r\nimport axios from 'axios';\r\nimport { openvz } from './subclasses';\r\nexport class Proxmox {\r\n  apiURL: string;\r\n  authString: string;\r\n  token: { CSRF?: any; PVEAuth?: any; timeStamp?: any; };\r\n  openvz: openvz;\r\n  constructor(name: string, pwd: string, hostname: string) {\r\n    this.apiURL = 'https://' + hostname + ':8006/api2/json';\r\n    this.authString = 'username=' + name + '&password=' + pwd;\r\n\r\n    this.token = {};\r\n    this.token.CSRF = '';\r\n    this.token.PVEAuth = '';\r\n    this.token.timeStamp = 0;\r\n    this.openvz = new openvz(this.get,this.post,this.del,this.put)\r\n  }\r\n\r\n  async authorize(path: any) {\r\n    const response = JSON.parse(await axios.get(path));\r\n    this.token.CSRF = response.data.CSRFPreventionToken;\r\n    this.token.PVEAuth = response.data.ticket;\r\n    this.token.timeStamp = new Date().getTime();\r\n  }\r\n\r\n  async makeRequest(method: string, path: any, data: any) {\r\n    if ((this.token.timeStamp + 7200) < new Date().getTime()) {\r\n      await this.authorize(path)\r\n    }\r\n    //this.curl(\"command\");\r\n  }\r\n\r\n  async get(path: string, data: {}) {   \r\n    await this.makeRequest('GET', path, data);\r\n  }\r\n\r\n  async post(path: string, data: any) {  \r\n    data = querystring.stringify(data);\r\n    this.makeRequest('POST', path, data);\r\n  }\r\n\r\n  async del(path: string, data: {}) {    \r\n    this.makeRequest('DEL', path, data);\r\n  }\r\n\r\n  async put(path: string, data: { search?: any; key?: any; timezone?: any; }) {  \r\n    data = querystring.stringify(data);\r\n    this.makeRequest('PUT', path, data);\r\n  }\r\n\r\n\r\n  getClusterStatus(callback: any) {\r\n    const data = {};\r\n    this.get('/cluster/status', data);\r\n  }\r\n  getClusterBackupSchedule(callback: any) {\r\n    const data = {};\r\n    this.get('/cluster/backup', data);\r\n  }\r\n  getNodeNetworks(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/network';\r\n    this.get(url, data);\r\n  }\r\n  getNodeInterface(node: string, nodeinterface: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/network/' + nodeinterface;\r\n    this.get(url, data);\r\n  }\r\n  getNodeContainerIndex(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/openvz/';\r\n    this.get(url, data);\r\n  }\r\n  getNodeVirtualIndex(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/qemu';\r\n    this.get(url, data);\r\n  }\r\n  getNodeServiceState(node: string, service: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/services/' + service + '/state';\r\n    this.get(url, data);\r\n  }\r\n  getNodeStorage(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/storage';\r\n    this.get(url, data);\r\n  }\r\n  getNodeFinishedTasks(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/tasks';\r\n    this.get(url, data);\r\n  }\r\n  getNodeDNS(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/dns';\r\n    this.get(url, data);\r\n  }\r\n  getNodeSyslog(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/syslog';\r\n    this.get(url, data);\r\n  }\r\n  getNodeRRD(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/rrd';\r\n    this.get(url, data);\r\n  }\r\n  getNodeRRDData(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/rrddata';\r\n    this.get(url, data);\r\n  }\r\n  getNodeBeans(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/ubfailcnt';\r\n    this.get(url, data);\r\n  }\r\n  getNodeTaskByUPID(node: string, upid: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/tasks/' + upid;\r\n    this.get(url, data);\r\n  }\r\n  getNodeTaskLogByUPID(node: string, upid: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/tasks/' + upid + '/log';\r\n    this.get(url, data);\r\n  }\r\n  getNodeTaskStatusByUPID(node: string, upid: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/tasks/' + upid + '/status';\r\n    this.get(url, data);\r\n  }\r\n  getNodeScanMethods(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/scan';\r\n    this.get(url, data);\r\n  }\r\n  getRemoteiSCSI(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/scan/iscsi';\r\n    this.get(url, data);\r\n  }\r\n  getNodeLVMGroups(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/scan/lvm';\r\n    this.get(url, data);\r\n  }\r\n  getRemoteNFS(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/scan/nfs';\r\n    this.get(url, data);\r\n  }\r\n  getNodeUSB(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/scan/usb';\r\n  }\r\n  getStorageVolumeData(node: string, storage: string, volume: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/storage/' + storage + '/content/' + volume;\r\n    this.get(url, data);\r\n  }\r\n  getStorageConfig(storage: string) {\r\n    const data = {};\r\n    const url = '/storage/' + storage;\r\n    this.get(url, data);\r\n  }\r\n  getNodeStorageContent(node: string, storage: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/storage/' + storage + '/content';\r\n    this.get(url, data);\r\n  }\r\n  getNodeStorageRRD(node: string, storage: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/storage/' + storage + '/rrd';\r\n    this.get(url, data);\r\n  }\r\n  getNodeStorageRRDData(node: string, storage: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/storage/' + storage + '/rrddata';\r\n    this.get(url, data);\r\n  }\r\n  //openvz functions\r\n  deleteNodeNetworkConfig(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/network';\r\n    this.del(url, data);\r\n  }\r\n  deleteNodeInterface(node: string, nodeinterface: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/network/' + nodeinterface;\r\n    this.del(url, data);\r\n  }\r\n  deletePool(poolid: string) {\r\n    const data = {};\r\n    const url = '/pools/' + poolid;\r\n    this.del(url, data);\r\n  }\r\n  setNodeDNSDomain(node: string, domain: any) {\r\n    const data = { 'search': domain };\r\n    const url = '/nodes/' + node + '/dns';\r\n    this.put(url, data);\r\n  }\r\n  setNodeSubscriptionKey(node: string, key: any) {\r\n    const data = { 'key': key };\r\n    const url = '/nodes/' + node + '/subscription';\r\n    this.put(url, data);\r\n  }\r\n  setNodeTimeZone(node: string, timezone: any) {\r\n    const data = { 'timezone': timezone };\r\n    const url = '/nodes/' + node + '/time';\r\n    this.put(url, data);\r\n  }\r\n  setPoolData(poolid: string, data: any) {\r\n    const url = '/pools/' + poolid;\r\n    this.put(url, data);\r\n  }\r\n  updateStorageConfiguration(storageid: string, data: any) {\r\n    const url = '/storage/' + storageid;\r\n    this.put(url, data);\r\n  }\r\n  //self added functions\r\n  getNodes(callback: any) {\r\n    const data = {};\r\n    const url = '/nodes/';\r\n    this.get(url, data);\r\n  }\r\n  getStorage(callback: any) {\r\n    const data = {};\r\n    const url = '/storage/';\r\n    this.get(url, data);\r\n  }\r\n  getQemu(node: string) {\r\n    const data = {};\r\n    const url = '/nodes/' + node + '/qemu';\r\n    this.get(url, data);\r\n  }\r\n  createQemu(node: string, data: any) {\r\n    const url = '/nodes/' + node + '/qemu';\r\n    this.post(url, data);\r\n  }\r\n\r\n\r\n}\r\n\r\n"]}