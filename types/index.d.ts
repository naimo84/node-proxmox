/** Declaration file generated by dts-gen */

export class Proxmox {
    constructor(username: any, password: any, hostname: any);

    createQemu(node: any, data: any): any;

    deleteNodeInterface(node: any, nodeinterface: any): any;

    deleteNodeNetworkConfig(node: any): any;

    deletePool(poolid: any): any;

    getClusterBackupSchedule(callback: any): any;

    getClusterStatus(callback: any): any;

    getNodeBeans(node: any): any;

    getNodeContainerIndex(node: any): any;

    getNodeDNS(node: any): any;

    getNodeFinishedTasks(node: any): any;

    getNodeInterface(node: any, nodeinterface: any): any;

    getNodeLVMGroups(node: any): any;

    getNodeNetworks(node: any): any;

    getNodeRRD(node: any): any;

    getNodeRRDData(node: any): any;

    getNodeScanMethods(node: any): any;

    getNodeServiceState(node: any, service: any): any;

    getNodeStorage(node: any): any;

    getNodeStorageContent(node: any, storage: any): any;

    getNodeStorageRRD(node: any, storage: any): any;

    getNodeStorageRRDData(node: any, storage: any): any;

    getNodeSyslog(node: any): any;

    getNodeTaskByUPID(node: any, upid: any): any;

    getNodeTaskLogByUPID(node: any, upid: any): any;

    getNodeTaskStatusByUPID(node: any, upid: any): any;

    getNodeUSB(node: any): any;

    getNodeVirtualIndex(node: any): any;

    getNodes(callback: any): any;

    getQemu(node: any): any;

    getRemoteNFS(node: any): any;

    getRemoteiSCSI(node: any): any;

    getStorage(callback: any): any;

    getStorageConfig(storage: any): any;

    getStorageVolumeData(node: any, storage: any, volume: any): any;

    httpDel(url: any, data: any): void;

    httpGet(arg0: any, data: any): void;

    httpPost(url: any, data: any): void;

    httpPut(url: any, data: any): void;

    setNodeDNSDomain(node: any, domain: any): any;

    setNodeSubscriptionKey(node: any, key: any): any;

    setNodeTimeZone(node: any, timezone: any): any;

    setPoolData(poolid: any, data: any): any;

    updateStorageConfiguration(storageid: any, data: any): any;

}

